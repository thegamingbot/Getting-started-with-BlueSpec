//
// Generated by Bluespec Compiler (build cd96b228)
//
// On Sat May 22 09:52:48 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module testbench(CLK,
		 RST_N);
  input  CLK;
  input  RST_N;

  // inlined wires
  reg [32 : 0] fib_response_fifo_rv$port0__write_1;
  wire [32 : 0] fib_response_fifo_rv$port1__read,
		fib_response_fifo_rv$port2__read;
  wire [8 : 0] fib_request_fifo_rv$port0__write_1,
	       fib_request_fifo_rv$port1__read,
	       fib_request_fifo_rv$port2__read;
  wire fib_request_fifo_rv$EN_port0__write,
       fib_request_fifo_rv$EN_port1__write,
       fib_response_fifo_rv$EN_port0__write;

  // register fib_read_server
  reg [5 : 0] fib_read_server;
  reg [5 : 0] fib_read_server$D_IN;
  wire fib_read_server$EN;

  // register fib_request_fifo_rv
  reg [8 : 0] fib_request_fifo_rv;
  wire [8 : 0] fib_request_fifo_rv$D_IN;
  wire fib_request_fifo_rv$EN;

  // register fib_response_fifo_rv
  reg [32 : 0] fib_response_fifo_rv;
  wire [32 : 0] fib_response_fifo_rv$D_IN;
  wire fib_response_fifo_rv$EN;

  // register fib_servers_1_a
  reg [31 : 0] fib_servers_1_a;
  wire [31 : 0] fib_servers_1_a$D_IN;
  wire fib_servers_1_a$EN;

  // register fib_servers_1_active
  reg fib_servers_1_active;
  wire fib_servers_1_active$D_IN, fib_servers_1_active$EN;

  // register fib_servers_1_b
  reg [31 : 0] fib_servers_1_b;
  wire [31 : 0] fib_servers_1_b$D_IN;
  wire fib_servers_1_b$EN;

  // register fib_servers_1_j
  reg [31 : 0] fib_servers_1_j;
  wire [31 : 0] fib_servers_1_j$D_IN;
  wire fib_servers_1_j$EN;

  // register fib_servers_2_a
  reg [31 : 0] fib_servers_2_a;
  wire [31 : 0] fib_servers_2_a$D_IN;
  wire fib_servers_2_a$EN;

  // register fib_servers_2_active
  reg fib_servers_2_active;
  wire fib_servers_2_active$D_IN, fib_servers_2_active$EN;

  // register fib_servers_2_b
  reg [31 : 0] fib_servers_2_b;
  wire [31 : 0] fib_servers_2_b$D_IN;
  wire fib_servers_2_b$EN;

  // register fib_servers_2_j
  reg [31 : 0] fib_servers_2_j;
  wire [31 : 0] fib_servers_2_j$D_IN;
  wire fib_servers_2_j$EN;

  // register fib_servers_3_a
  reg [31 : 0] fib_servers_3_a;
  wire [31 : 0] fib_servers_3_a$D_IN;
  wire fib_servers_3_a$EN;

  // register fib_servers_3_active
  reg fib_servers_3_active;
  wire fib_servers_3_active$D_IN, fib_servers_3_active$EN;

  // register fib_servers_3_b
  reg [31 : 0] fib_servers_3_b;
  wire [31 : 0] fib_servers_3_b$D_IN;
  wire fib_servers_3_b$EN;

  // register fib_servers_3_j
  reg [31 : 0] fib_servers_3_j;
  wire [31 : 0] fib_servers_3_j$D_IN;
  wire fib_servers_3_j$EN;

  // register fib_servers_4_a
  reg [31 : 0] fib_servers_4_a;
  wire [31 : 0] fib_servers_4_a$D_IN;
  wire fib_servers_4_a$EN;

  // register fib_servers_4_active
  reg fib_servers_4_active;
  wire fib_servers_4_active$D_IN, fib_servers_4_active$EN;

  // register fib_servers_4_b
  reg [31 : 0] fib_servers_4_b;
  wire [31 : 0] fib_servers_4_b$D_IN;
  wire fib_servers_4_b$EN;

  // register fib_servers_4_j
  reg [31 : 0] fib_servers_4_j;
  wire [31 : 0] fib_servers_4_j$D_IN;
  wire fib_servers_4_j$EN;

  // register fib_servers_5_a
  reg [31 : 0] fib_servers_5_a;
  wire [31 : 0] fib_servers_5_a$D_IN;
  wire fib_servers_5_a$EN;

  // register fib_servers_5_active
  reg fib_servers_5_active;
  wire fib_servers_5_active$D_IN, fib_servers_5_active$EN;

  // register fib_servers_5_b
  reg [31 : 0] fib_servers_5_b;
  wire [31 : 0] fib_servers_5_b$D_IN;
  wire fib_servers_5_b$EN;

  // register fib_servers_5_j
  reg [31 : 0] fib_servers_5_j;
  wire [31 : 0] fib_servers_5_j$D_IN;
  wire fib_servers_5_j$EN;

  // register fib_servers_6_a
  reg [31 : 0] fib_servers_6_a;
  wire [31 : 0] fib_servers_6_a$D_IN;
  wire fib_servers_6_a$EN;

  // register fib_servers_6_active
  reg fib_servers_6_active;
  wire fib_servers_6_active$D_IN, fib_servers_6_active$EN;

  // register fib_servers_6_b
  reg [31 : 0] fib_servers_6_b;
  wire [31 : 0] fib_servers_6_b$D_IN;
  wire fib_servers_6_b$EN;

  // register fib_servers_6_j
  reg [31 : 0] fib_servers_6_j;
  wire [31 : 0] fib_servers_6_j$D_IN;
  wire fib_servers_6_j$EN;

  // register fib_servers_7_a
  reg [31 : 0] fib_servers_7_a;
  wire [31 : 0] fib_servers_7_a$D_IN;
  wire fib_servers_7_a$EN;

  // register fib_servers_7_active
  reg fib_servers_7_active;
  wire fib_servers_7_active$D_IN, fib_servers_7_active$EN;

  // register fib_servers_7_b
  reg [31 : 0] fib_servers_7_b;
  wire [31 : 0] fib_servers_7_b$D_IN;
  wire fib_servers_7_b$EN;

  // register fib_servers_7_j
  reg [31 : 0] fib_servers_7_j;
  wire [31 : 0] fib_servers_7_j$D_IN;
  wire fib_servers_7_j$EN;

  // register fib_servers_8_a
  reg [31 : 0] fib_servers_8_a;
  wire [31 : 0] fib_servers_8_a$D_IN;
  wire fib_servers_8_a$EN;

  // register fib_servers_8_active
  reg fib_servers_8_active;
  wire fib_servers_8_active$D_IN, fib_servers_8_active$EN;

  // register fib_servers_8_b
  reg [31 : 0] fib_servers_8_b;
  wire [31 : 0] fib_servers_8_b$D_IN;
  wire fib_servers_8_b$EN;

  // register fib_servers_8_j
  reg [31 : 0] fib_servers_8_j;
  wire [31 : 0] fib_servers_8_j$D_IN;
  wire fib_servers_8_j$EN;

  // register fib_servers_9_a
  reg [31 : 0] fib_servers_9_a;
  wire [31 : 0] fib_servers_9_a$D_IN;
  wire fib_servers_9_a$EN;

  // register fib_servers_9_active
  reg fib_servers_9_active;
  wire fib_servers_9_active$D_IN, fib_servers_9_active$EN;

  // register fib_servers_9_b
  reg [31 : 0] fib_servers_9_b;
  wire [31 : 0] fib_servers_9_b$D_IN;
  wire fib_servers_9_b$EN;

  // register fib_servers_9_j
  reg [31 : 0] fib_servers_9_j;
  wire [31 : 0] fib_servers_9_j$D_IN;
  wire fib_servers_9_j$EN;

  // register fib_servers_a
  reg [31 : 0] fib_servers_a;
  wire [31 : 0] fib_servers_a$D_IN;
  wire fib_servers_a$EN;

  // register fib_servers_active
  reg fib_servers_active;
  wire fib_servers_active$D_IN, fib_servers_active$EN;

  // register fib_servers_b
  reg [31 : 0] fib_servers_b;
  wire [31 : 0] fib_servers_b$D_IN;
  wire fib_servers_b$EN;

  // register fib_servers_j
  reg [31 : 0] fib_servers_j;
  wire [31 : 0] fib_servers_j$D_IN;
  wire fib_servers_j$EN;

  // register fib_write_server
  reg [5 : 0] fib_write_server;
  reg [5 : 0] fib_write_server$D_IN;
  wire fib_write_server$EN;

  // register n
  reg [7 : 0] n;
  wire [7 : 0] n$D_IN;
  wire n$EN;

  // ports of submodule fib_servers_1_result_fifo
  wire [31 : 0] fib_servers_1_result_fifo$D_IN,
		fib_servers_1_result_fifo$D_OUT;
  wire fib_servers_1_result_fifo$CLR,
       fib_servers_1_result_fifo$DEQ,
       fib_servers_1_result_fifo$EMPTY_N,
       fib_servers_1_result_fifo$ENQ,
       fib_servers_1_result_fifo$FULL_N;

  // ports of submodule fib_servers_2_result_fifo
  wire [31 : 0] fib_servers_2_result_fifo$D_IN,
		fib_servers_2_result_fifo$D_OUT;
  wire fib_servers_2_result_fifo$CLR,
       fib_servers_2_result_fifo$DEQ,
       fib_servers_2_result_fifo$EMPTY_N,
       fib_servers_2_result_fifo$ENQ,
       fib_servers_2_result_fifo$FULL_N;

  // ports of submodule fib_servers_3_result_fifo
  wire [31 : 0] fib_servers_3_result_fifo$D_IN,
		fib_servers_3_result_fifo$D_OUT;
  wire fib_servers_3_result_fifo$CLR,
       fib_servers_3_result_fifo$DEQ,
       fib_servers_3_result_fifo$EMPTY_N,
       fib_servers_3_result_fifo$ENQ,
       fib_servers_3_result_fifo$FULL_N;

  // ports of submodule fib_servers_4_result_fifo
  wire [31 : 0] fib_servers_4_result_fifo$D_IN,
		fib_servers_4_result_fifo$D_OUT;
  wire fib_servers_4_result_fifo$CLR,
       fib_servers_4_result_fifo$DEQ,
       fib_servers_4_result_fifo$EMPTY_N,
       fib_servers_4_result_fifo$ENQ,
       fib_servers_4_result_fifo$FULL_N;

  // ports of submodule fib_servers_5_result_fifo
  wire [31 : 0] fib_servers_5_result_fifo$D_IN,
		fib_servers_5_result_fifo$D_OUT;
  wire fib_servers_5_result_fifo$CLR,
       fib_servers_5_result_fifo$DEQ,
       fib_servers_5_result_fifo$EMPTY_N,
       fib_servers_5_result_fifo$ENQ,
       fib_servers_5_result_fifo$FULL_N;

  // ports of submodule fib_servers_6_result_fifo
  wire [31 : 0] fib_servers_6_result_fifo$D_IN,
		fib_servers_6_result_fifo$D_OUT;
  wire fib_servers_6_result_fifo$CLR,
       fib_servers_6_result_fifo$DEQ,
       fib_servers_6_result_fifo$EMPTY_N,
       fib_servers_6_result_fifo$ENQ,
       fib_servers_6_result_fifo$FULL_N;

  // ports of submodule fib_servers_7_result_fifo
  wire [31 : 0] fib_servers_7_result_fifo$D_IN,
		fib_servers_7_result_fifo$D_OUT;
  wire fib_servers_7_result_fifo$CLR,
       fib_servers_7_result_fifo$DEQ,
       fib_servers_7_result_fifo$EMPTY_N,
       fib_servers_7_result_fifo$ENQ,
       fib_servers_7_result_fifo$FULL_N;

  // ports of submodule fib_servers_8_result_fifo
  wire [31 : 0] fib_servers_8_result_fifo$D_IN,
		fib_servers_8_result_fifo$D_OUT;
  wire fib_servers_8_result_fifo$CLR,
       fib_servers_8_result_fifo$DEQ,
       fib_servers_8_result_fifo$EMPTY_N,
       fib_servers_8_result_fifo$ENQ,
       fib_servers_8_result_fifo$FULL_N;

  // ports of submodule fib_servers_9_result_fifo
  wire [31 : 0] fib_servers_9_result_fifo$D_IN,
		fib_servers_9_result_fifo$D_OUT;
  wire fib_servers_9_result_fifo$CLR,
       fib_servers_9_result_fifo$DEQ,
       fib_servers_9_result_fifo$EMPTY_N,
       fib_servers_9_result_fifo$ENQ,
       fib_servers_9_result_fifo$FULL_N;

  // ports of submodule fib_servers_result_fifo
  wire [31 : 0] fib_servers_result_fifo$D_IN, fib_servers_result_fifo$D_OUT;
  wire fib_servers_result_fifo$CLR,
       fib_servers_result_fifo$DEQ,
       fib_servers_result_fifo$EMPTY_N,
       fib_servers_result_fifo$ENQ,
       fib_servers_result_fifo$FULL_N;

  // ports of submodule inputs
  wire [7 : 0] inputs$D_IN, inputs$D_OUT;
  wire inputs$CLR, inputs$DEQ, inputs$EMPTY_N, inputs$ENQ, inputs$FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_display_results,
       WILL_FIRE_RL_fib_gather_results,
       WILL_FIRE_RL_fib_gather_results_1,
       WILL_FIRE_RL_fib_gather_results_2,
       WILL_FIRE_RL_fib_gather_results_3,
       WILL_FIRE_RL_fib_gather_results_4,
       WILL_FIRE_RL_fib_gather_results_5,
       WILL_FIRE_RL_fib_gather_results_6,
       WILL_FIRE_RL_fib_gather_results_7,
       WILL_FIRE_RL_fib_gather_results_8,
       WILL_FIRE_RL_fib_gather_results_9,
       WILL_FIRE_RL_fib_put_requests,
       WILL_FIRE_RL_fib_put_requests_1,
       WILL_FIRE_RL_fib_put_requests_2,
       WILL_FIRE_RL_fib_put_requests_3,
       WILL_FIRE_RL_fib_put_requests_4,
       WILL_FIRE_RL_fib_put_requests_5,
       WILL_FIRE_RL_fib_put_requests_6,
       WILL_FIRE_RL_fib_put_requests_7,
       WILL_FIRE_RL_fib_put_requests_8,
       WILL_FIRE_RL_fib_put_requests_9,
       WILL_FIRE_RL_fib_servers_1_loop,
       WILL_FIRE_RL_fib_servers_1_n_is_zero,
       WILL_FIRE_RL_fib_servers_1_the_end,
       WILL_FIRE_RL_fib_servers_2_loop,
       WILL_FIRE_RL_fib_servers_2_n_is_zero,
       WILL_FIRE_RL_fib_servers_2_the_end,
       WILL_FIRE_RL_fib_servers_3_loop,
       WILL_FIRE_RL_fib_servers_3_n_is_zero,
       WILL_FIRE_RL_fib_servers_3_the_end,
       WILL_FIRE_RL_fib_servers_4_loop,
       WILL_FIRE_RL_fib_servers_4_n_is_zero,
       WILL_FIRE_RL_fib_servers_4_the_end,
       WILL_FIRE_RL_fib_servers_5_loop,
       WILL_FIRE_RL_fib_servers_5_n_is_zero,
       WILL_FIRE_RL_fib_servers_5_the_end,
       WILL_FIRE_RL_fib_servers_6_loop,
       WILL_FIRE_RL_fib_servers_6_n_is_zero,
       WILL_FIRE_RL_fib_servers_6_the_end,
       WILL_FIRE_RL_fib_servers_7_loop,
       WILL_FIRE_RL_fib_servers_7_n_is_zero,
       WILL_FIRE_RL_fib_servers_7_the_end,
       WILL_FIRE_RL_fib_servers_8_loop,
       WILL_FIRE_RL_fib_servers_8_n_is_zero,
       WILL_FIRE_RL_fib_servers_8_the_end,
       WILL_FIRE_RL_fib_servers_9_loop,
       WILL_FIRE_RL_fib_servers_9_n_is_zero,
       WILL_FIRE_RL_fib_servers_9_the_end,
       WILL_FIRE_RL_fib_servers_loop,
       WILL_FIRE_RL_fib_servers_n_is_zero,
       WILL_FIRE_RL_fib_servers_the_end;

  // inputs to muxes for submodule ports
  wire [32 : 0] MUX_fib_response_fifo_rv$port0__write_1__VAL_1,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_10,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_2,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_3,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_4,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_5,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_6,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_7,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_8,
		MUX_fib_response_fifo_rv$port0__write_1__VAL_9;
  wire [31 : 0] MUX_fib_servers_1_a$write_1__VAL_1,
		MUX_fib_servers_1_j$write_1__VAL_1,
		MUX_fib_servers_1_j$write_1__VAL_2,
		MUX_fib_servers_2_a$write_1__VAL_1,
		MUX_fib_servers_2_j$write_1__VAL_2,
		MUX_fib_servers_3_a$write_1__VAL_1,
		MUX_fib_servers_3_j$write_1__VAL_2,
		MUX_fib_servers_4_a$write_1__VAL_1,
		MUX_fib_servers_4_j$write_1__VAL_2,
		MUX_fib_servers_5_a$write_1__VAL_1,
		MUX_fib_servers_5_j$write_1__VAL_2,
		MUX_fib_servers_6_a$write_1__VAL_1,
		MUX_fib_servers_6_j$write_1__VAL_2,
		MUX_fib_servers_7_a$write_1__VAL_1,
		MUX_fib_servers_7_j$write_1__VAL_2,
		MUX_fib_servers_8_a$write_1__VAL_1,
		MUX_fib_servers_8_j$write_1__VAL_2,
		MUX_fib_servers_9_a$write_1__VAL_1,
		MUX_fib_servers_9_j$write_1__VAL_2,
		MUX_fib_servers_a$write_1__VAL_1,
		MUX_fib_servers_j$write_1__VAL_2;
  wire MUX_fib_servers_1_active$write_1__SEL_1,
       MUX_fib_servers_2_active$write_1__SEL_1,
       MUX_fib_servers_3_active$write_1__SEL_1,
       MUX_fib_servers_4_active$write_1__SEL_1,
       MUX_fib_servers_5_active$write_1__SEL_1,
       MUX_fib_servers_6_active$write_1__SEL_1,
       MUX_fib_servers_7_active$write_1__SEL_1,
       MUX_fib_servers_8_active$write_1__SEL_1,
       MUX_fib_servers_9_active$write_1__SEL_1,
       MUX_fib_servers_active$write_1__SEL_1;

  // submodule fib_servers_1_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_1_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_1_result_fifo$D_IN),
						     .ENQ(fib_servers_1_result_fifo$ENQ),
						     .DEQ(fib_servers_1_result_fifo$DEQ),
						     .CLR(fib_servers_1_result_fifo$CLR),
						     .D_OUT(fib_servers_1_result_fifo$D_OUT),
						     .FULL_N(fib_servers_1_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_1_result_fifo$EMPTY_N));

  // submodule fib_servers_2_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_2_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_2_result_fifo$D_IN),
						     .ENQ(fib_servers_2_result_fifo$ENQ),
						     .DEQ(fib_servers_2_result_fifo$DEQ),
						     .CLR(fib_servers_2_result_fifo$CLR),
						     .D_OUT(fib_servers_2_result_fifo$D_OUT),
						     .FULL_N(fib_servers_2_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_2_result_fifo$EMPTY_N));

  // submodule fib_servers_3_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_3_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_3_result_fifo$D_IN),
						     .ENQ(fib_servers_3_result_fifo$ENQ),
						     .DEQ(fib_servers_3_result_fifo$DEQ),
						     .CLR(fib_servers_3_result_fifo$CLR),
						     .D_OUT(fib_servers_3_result_fifo$D_OUT),
						     .FULL_N(fib_servers_3_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_3_result_fifo$EMPTY_N));

  // submodule fib_servers_4_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_4_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_4_result_fifo$D_IN),
						     .ENQ(fib_servers_4_result_fifo$ENQ),
						     .DEQ(fib_servers_4_result_fifo$DEQ),
						     .CLR(fib_servers_4_result_fifo$CLR),
						     .D_OUT(fib_servers_4_result_fifo$D_OUT),
						     .FULL_N(fib_servers_4_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_4_result_fifo$EMPTY_N));

  // submodule fib_servers_5_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_5_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_5_result_fifo$D_IN),
						     .ENQ(fib_servers_5_result_fifo$ENQ),
						     .DEQ(fib_servers_5_result_fifo$DEQ),
						     .CLR(fib_servers_5_result_fifo$CLR),
						     .D_OUT(fib_servers_5_result_fifo$D_OUT),
						     .FULL_N(fib_servers_5_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_5_result_fifo$EMPTY_N));

  // submodule fib_servers_6_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_6_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_6_result_fifo$D_IN),
						     .ENQ(fib_servers_6_result_fifo$ENQ),
						     .DEQ(fib_servers_6_result_fifo$DEQ),
						     .CLR(fib_servers_6_result_fifo$CLR),
						     .D_OUT(fib_servers_6_result_fifo$D_OUT),
						     .FULL_N(fib_servers_6_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_6_result_fifo$EMPTY_N));

  // submodule fib_servers_7_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_7_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_7_result_fifo$D_IN),
						     .ENQ(fib_servers_7_result_fifo$ENQ),
						     .DEQ(fib_servers_7_result_fifo$DEQ),
						     .CLR(fib_servers_7_result_fifo$CLR),
						     .D_OUT(fib_servers_7_result_fifo$D_OUT),
						     .FULL_N(fib_servers_7_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_7_result_fifo$EMPTY_N));

  // submodule fib_servers_8_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_8_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_8_result_fifo$D_IN),
						     .ENQ(fib_servers_8_result_fifo$ENQ),
						     .DEQ(fib_servers_8_result_fifo$DEQ),
						     .CLR(fib_servers_8_result_fifo$CLR),
						     .D_OUT(fib_servers_8_result_fifo$D_OUT),
						     .FULL_N(fib_servers_8_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_8_result_fifo$EMPTY_N));

  // submodule fib_servers_9_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_9_result_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fib_servers_9_result_fifo$D_IN),
						     .ENQ(fib_servers_9_result_fifo$ENQ),
						     .DEQ(fib_servers_9_result_fifo$DEQ),
						     .CLR(fib_servers_9_result_fifo$CLR),
						     .D_OUT(fib_servers_9_result_fifo$D_OUT),
						     .FULL_N(fib_servers_9_result_fifo$FULL_N),
						     .EMPTY_N(fib_servers_9_result_fifo$EMPTY_N));

  // submodule fib_servers_result_fifo
  FIFOL1 #(.width(32'd32)) fib_servers_result_fifo(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(fib_servers_result_fifo$D_IN),
						   .ENQ(fib_servers_result_fifo$ENQ),
						   .DEQ(fib_servers_result_fifo$DEQ),
						   .CLR(fib_servers_result_fifo$CLR),
						   .D_OUT(fib_servers_result_fifo$D_OUT),
						   .FULL_N(fib_servers_result_fifo$FULL_N),
						   .EMPTY_N(fib_servers_result_fifo$EMPTY_N));

  // submodule inputs
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) inputs(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(inputs$D_IN),
				     .ENQ(inputs$ENQ),
				     .DEQ(inputs$DEQ),
				     .CLR(inputs$CLR),
				     .D_OUT(inputs$D_OUT),
				     .FULL_N(inputs$FULL_N),
				     .EMPTY_N(inputs$EMPTY_N));

  // rule RL_fib_put_requests
  assign WILL_FIRE_RL_fib_put_requests =
	     !fib_servers_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd0 ;

  // rule RL_fib_gather_results
  assign WILL_FIRE_RL_fib_gather_results =
	     fib_servers_result_fifo$EMPTY_N && !fib_response_fifo_rv[32] &&
	     fib_read_server == 6'd0 ;

  // rule RL_fib_put_requests_1
  assign WILL_FIRE_RL_fib_put_requests_1 =
	     !fib_servers_1_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd1 ;

  // rule RL_fib_gather_results_1
  assign WILL_FIRE_RL_fib_gather_results_1 =
	     !fib_response_fifo_rv[32] && fib_servers_1_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd1 ;

  // rule RL_fib_put_requests_2
  assign WILL_FIRE_RL_fib_put_requests_2 =
	     !fib_servers_2_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd2 ;

  // rule RL_fib_gather_results_2
  assign WILL_FIRE_RL_fib_gather_results_2 =
	     !fib_response_fifo_rv[32] && fib_servers_2_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd2 ;

  // rule RL_fib_put_requests_3
  assign WILL_FIRE_RL_fib_put_requests_3 =
	     !fib_servers_3_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd3 ;

  // rule RL_fib_gather_results_3
  assign WILL_FIRE_RL_fib_gather_results_3 =
	     !fib_response_fifo_rv[32] && fib_servers_3_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd3 ;

  // rule RL_fib_put_requests_4
  assign WILL_FIRE_RL_fib_put_requests_4 =
	     !fib_servers_4_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd4 ;

  // rule RL_fib_gather_results_4
  assign WILL_FIRE_RL_fib_gather_results_4 =
	     !fib_response_fifo_rv[32] && fib_servers_4_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd4 ;

  // rule RL_fib_put_requests_5
  assign WILL_FIRE_RL_fib_put_requests_5 =
	     !fib_servers_5_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd5 ;

  // rule RL_fib_gather_results_5
  assign WILL_FIRE_RL_fib_gather_results_5 =
	     !fib_response_fifo_rv[32] && fib_servers_5_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd5 ;

  // rule RL_fib_put_requests_6
  assign WILL_FIRE_RL_fib_put_requests_6 =
	     !fib_servers_6_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd6 ;

  // rule RL_fib_gather_results_6
  assign WILL_FIRE_RL_fib_gather_results_6 =
	     !fib_response_fifo_rv[32] && fib_servers_6_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd6 ;

  // rule RL_fib_put_requests_7
  assign WILL_FIRE_RL_fib_put_requests_7 =
	     !fib_servers_7_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd7 ;

  // rule RL_fib_gather_results_7
  assign WILL_FIRE_RL_fib_gather_results_7 =
	     !fib_response_fifo_rv[32] && fib_servers_7_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd7 ;

  // rule RL_fib_put_requests_8
  assign WILL_FIRE_RL_fib_put_requests_8 =
	     !fib_servers_8_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd8 ;

  // rule RL_fib_gather_results_8
  assign WILL_FIRE_RL_fib_gather_results_8 =
	     !fib_response_fifo_rv[32] && fib_servers_8_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd8 ;

  // rule RL_fib_put_requests_9
  assign WILL_FIRE_RL_fib_put_requests_9 =
	     !fib_servers_9_active && fib_request_fifo_rv$port1__read[8] &&
	     fib_write_server == 6'd9 ;

  // rule RL_fib_gather_results_9
  assign WILL_FIRE_RL_fib_gather_results_9 =
	     !fib_response_fifo_rv[32] && fib_servers_9_result_fifo$EMPTY_N &&
	     fib_read_server == 6'd9 ;

  // rule RL_display_results
  assign WILL_FIRE_RL_display_results =
	     fib_response_fifo_rv$port1__read[32] && inputs$EMPTY_N ;

  // rule RL_fib_servers_loop
  assign WILL_FIRE_RL_fib_servers_loop =
	     fib_servers_active && fib_servers_j > 32'd1 ;

  // rule RL_fib_servers_the_end
  assign WILL_FIRE_RL_fib_servers_the_end =
	     fib_servers_result_fifo$FULL_N && fib_servers_active &&
	     fib_servers_j == 32'd1 ;

  // rule RL_fib_servers_n_is_zero
  assign WILL_FIRE_RL_fib_servers_n_is_zero =
	     fib_servers_result_fifo$FULL_N && fib_servers_active &&
	     fib_servers_j == 32'd0 ;

  // rule RL_fib_servers_1_loop
  assign WILL_FIRE_RL_fib_servers_1_loop =
	     fib_servers_1_active && fib_servers_1_j > 32'd1 ;

  // rule RL_fib_servers_1_the_end
  assign WILL_FIRE_RL_fib_servers_1_the_end =
	     fib_servers_1_result_fifo$FULL_N && fib_servers_1_active &&
	     fib_servers_1_j == 32'd1 ;

  // rule RL_fib_servers_1_n_is_zero
  assign WILL_FIRE_RL_fib_servers_1_n_is_zero =
	     fib_servers_1_result_fifo$FULL_N && fib_servers_1_active &&
	     fib_servers_1_j == 32'd0 ;

  // rule RL_fib_servers_2_loop
  assign WILL_FIRE_RL_fib_servers_2_loop =
	     fib_servers_2_active && fib_servers_2_j > 32'd1 ;

  // rule RL_fib_servers_2_the_end
  assign WILL_FIRE_RL_fib_servers_2_the_end =
	     fib_servers_2_result_fifo$FULL_N && fib_servers_2_active &&
	     fib_servers_2_j == 32'd1 ;

  // rule RL_fib_servers_2_n_is_zero
  assign WILL_FIRE_RL_fib_servers_2_n_is_zero =
	     fib_servers_2_result_fifo$FULL_N && fib_servers_2_active &&
	     fib_servers_2_j == 32'd0 ;

  // rule RL_fib_servers_3_loop
  assign WILL_FIRE_RL_fib_servers_3_loop =
	     fib_servers_3_active && fib_servers_3_j > 32'd1 ;

  // rule RL_fib_servers_3_the_end
  assign WILL_FIRE_RL_fib_servers_3_the_end =
	     fib_servers_3_result_fifo$FULL_N && fib_servers_3_active &&
	     fib_servers_3_j == 32'd1 ;

  // rule RL_fib_servers_3_n_is_zero
  assign WILL_FIRE_RL_fib_servers_3_n_is_zero =
	     fib_servers_3_result_fifo$FULL_N && fib_servers_3_active &&
	     fib_servers_3_j == 32'd0 ;

  // rule RL_fib_servers_4_loop
  assign WILL_FIRE_RL_fib_servers_4_loop =
	     fib_servers_4_active && fib_servers_4_j > 32'd1 ;

  // rule RL_fib_servers_4_the_end
  assign WILL_FIRE_RL_fib_servers_4_the_end =
	     fib_servers_4_result_fifo$FULL_N && fib_servers_4_active &&
	     fib_servers_4_j == 32'd1 ;

  // rule RL_fib_servers_4_n_is_zero
  assign WILL_FIRE_RL_fib_servers_4_n_is_zero =
	     fib_servers_4_result_fifo$FULL_N && fib_servers_4_active &&
	     fib_servers_4_j == 32'd0 ;

  // rule RL_fib_servers_5_loop
  assign WILL_FIRE_RL_fib_servers_5_loop =
	     fib_servers_5_active && fib_servers_5_j > 32'd1 ;

  // rule RL_fib_servers_5_the_end
  assign WILL_FIRE_RL_fib_servers_5_the_end =
	     fib_servers_5_result_fifo$FULL_N && fib_servers_5_active &&
	     fib_servers_5_j == 32'd1 ;

  // rule RL_fib_servers_5_n_is_zero
  assign WILL_FIRE_RL_fib_servers_5_n_is_zero =
	     fib_servers_5_result_fifo$FULL_N && fib_servers_5_active &&
	     fib_servers_5_j == 32'd0 ;

  // rule RL_fib_servers_6_loop
  assign WILL_FIRE_RL_fib_servers_6_loop =
	     fib_servers_6_active && fib_servers_6_j > 32'd1 ;

  // rule RL_fib_servers_6_the_end
  assign WILL_FIRE_RL_fib_servers_6_the_end =
	     fib_servers_6_result_fifo$FULL_N && fib_servers_6_active &&
	     fib_servers_6_j == 32'd1 ;

  // rule RL_fib_servers_6_n_is_zero
  assign WILL_FIRE_RL_fib_servers_6_n_is_zero =
	     fib_servers_6_result_fifo$FULL_N && fib_servers_6_active &&
	     fib_servers_6_j == 32'd0 ;

  // rule RL_fib_servers_7_loop
  assign WILL_FIRE_RL_fib_servers_7_loop =
	     fib_servers_7_active && fib_servers_7_j > 32'd1 ;

  // rule RL_fib_servers_7_the_end
  assign WILL_FIRE_RL_fib_servers_7_the_end =
	     fib_servers_7_result_fifo$FULL_N && fib_servers_7_active &&
	     fib_servers_7_j == 32'd1 ;

  // rule RL_fib_servers_7_n_is_zero
  assign WILL_FIRE_RL_fib_servers_7_n_is_zero =
	     fib_servers_7_result_fifo$FULL_N && fib_servers_7_active &&
	     fib_servers_7_j == 32'd0 ;

  // rule RL_fib_servers_8_loop
  assign WILL_FIRE_RL_fib_servers_8_loop =
	     fib_servers_8_active && fib_servers_8_j > 32'd1 ;

  // rule RL_fib_servers_8_the_end
  assign WILL_FIRE_RL_fib_servers_8_the_end =
	     fib_servers_8_result_fifo$FULL_N && fib_servers_8_active &&
	     fib_servers_8_j == 32'd1 ;

  // rule RL_fib_servers_8_n_is_zero
  assign WILL_FIRE_RL_fib_servers_8_n_is_zero =
	     fib_servers_8_result_fifo$FULL_N && fib_servers_8_active &&
	     fib_servers_8_j == 32'd0 ;

  // rule RL_fib_servers_9_loop
  assign WILL_FIRE_RL_fib_servers_9_loop =
	     fib_servers_9_active && fib_servers_9_j > 32'd1 ;

  // rule RL_fib_servers_9_the_end
  assign WILL_FIRE_RL_fib_servers_9_the_end =
	     fib_servers_9_result_fifo$FULL_N && fib_servers_9_active &&
	     fib_servers_9_j == 32'd1 ;

  // rule RL_fib_servers_9_n_is_zero
  assign WILL_FIRE_RL_fib_servers_9_n_is_zero =
	     fib_servers_9_result_fifo$FULL_N && fib_servers_9_active &&
	     fib_servers_9_j == 32'd0 ;

  // inputs to muxes for submodule ports
  assign MUX_fib_servers_1_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_1_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_1_the_end ;
  assign MUX_fib_servers_2_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_2_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_2_the_end ;
  assign MUX_fib_servers_3_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_3_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_3_the_end ;
  assign MUX_fib_servers_4_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_4_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_4_the_end ;
  assign MUX_fib_servers_5_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_5_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_5_the_end ;
  assign MUX_fib_servers_6_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_6_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_6_the_end ;
  assign MUX_fib_servers_7_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_7_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_7_the_end ;
  assign MUX_fib_servers_8_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_8_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_8_the_end ;
  assign MUX_fib_servers_9_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_9_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_9_the_end ;
  assign MUX_fib_servers_active$write_1__SEL_1 =
	     WILL_FIRE_RL_fib_servers_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_the_end ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_1 =
	     { 1'd1, fib_servers_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_2 =
	     { 1'd1, fib_servers_1_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_3 =
	     { 1'd1, fib_servers_2_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_4 =
	     { 1'd1, fib_servers_3_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_5 =
	     { 1'd1, fib_servers_4_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_6 =
	     { 1'd1, fib_servers_5_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_7 =
	     { 1'd1, fib_servers_6_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_8 =
	     { 1'd1, fib_servers_7_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_9 =
	     { 1'd1, fib_servers_8_result_fifo$D_OUT } ;
  assign MUX_fib_response_fifo_rv$port0__write_1__VAL_10 =
	     { 1'd1, fib_servers_9_result_fifo$D_OUT } ;
  assign MUX_fib_servers_1_a$write_1__VAL_1 =
	     fib_servers_1_a + fib_servers_1_b ;
  assign MUX_fib_servers_1_j$write_1__VAL_1 =
	     { 24'd0, fib_request_fifo_rv$port1__read[7:0] } ;
  assign MUX_fib_servers_1_j$write_1__VAL_2 = fib_servers_1_j - 32'd1 ;
  assign MUX_fib_servers_2_a$write_1__VAL_1 =
	     fib_servers_2_a + fib_servers_2_b ;
  assign MUX_fib_servers_2_j$write_1__VAL_2 = fib_servers_2_j - 32'd1 ;
  assign MUX_fib_servers_3_a$write_1__VAL_1 =
	     fib_servers_3_a + fib_servers_3_b ;
  assign MUX_fib_servers_3_j$write_1__VAL_2 = fib_servers_3_j - 32'd1 ;
  assign MUX_fib_servers_4_a$write_1__VAL_1 =
	     fib_servers_4_a + fib_servers_4_b ;
  assign MUX_fib_servers_4_j$write_1__VAL_2 = fib_servers_4_j - 32'd1 ;
  assign MUX_fib_servers_5_a$write_1__VAL_1 =
	     fib_servers_5_a + fib_servers_5_b ;
  assign MUX_fib_servers_5_j$write_1__VAL_2 = fib_servers_5_j - 32'd1 ;
  assign MUX_fib_servers_6_a$write_1__VAL_1 =
	     fib_servers_6_a + fib_servers_6_b ;
  assign MUX_fib_servers_6_j$write_1__VAL_2 = fib_servers_6_j - 32'd1 ;
  assign MUX_fib_servers_7_a$write_1__VAL_1 =
	     fib_servers_7_a + fib_servers_7_b ;
  assign MUX_fib_servers_7_j$write_1__VAL_2 = fib_servers_7_j - 32'd1 ;
  assign MUX_fib_servers_8_a$write_1__VAL_1 =
	     fib_servers_8_a + fib_servers_8_b ;
  assign MUX_fib_servers_8_j$write_1__VAL_2 = fib_servers_8_j - 32'd1 ;
  assign MUX_fib_servers_9_a$write_1__VAL_1 =
	     fib_servers_9_a + fib_servers_9_b ;
  assign MUX_fib_servers_9_j$write_1__VAL_2 = fib_servers_9_j - 32'd1 ;
  assign MUX_fib_servers_a$write_1__VAL_1 = fib_servers_a + fib_servers_b ;
  assign MUX_fib_servers_j$write_1__VAL_2 = fib_servers_j - 32'd1 ;

  // inlined wires
  assign fib_request_fifo_rv$EN_port0__write =
	     !fib_request_fifo_rv[8] && inputs$FULL_N && n <= 8'd20 ;
  assign fib_request_fifo_rv$port0__write_1 = { 1'd1, n } ;
  assign fib_request_fifo_rv$port1__read =
	     fib_request_fifo_rv$EN_port0__write ?
	       fib_request_fifo_rv$port0__write_1 :
	       fib_request_fifo_rv ;
  assign fib_request_fifo_rv$EN_port1__write =
	     WILL_FIRE_RL_fib_put_requests_9 ||
	     WILL_FIRE_RL_fib_put_requests_8 ||
	     WILL_FIRE_RL_fib_put_requests_7 ||
	     WILL_FIRE_RL_fib_put_requests_6 ||
	     WILL_FIRE_RL_fib_put_requests_5 ||
	     WILL_FIRE_RL_fib_put_requests_4 ||
	     WILL_FIRE_RL_fib_put_requests_3 ||
	     WILL_FIRE_RL_fib_put_requests_2 ||
	     WILL_FIRE_RL_fib_put_requests_1 ||
	     WILL_FIRE_RL_fib_put_requests ;
  assign fib_request_fifo_rv$port2__read =
	     fib_request_fifo_rv$EN_port1__write ?
	       9'd170 :
	       fib_request_fifo_rv$port1__read ;
  assign fib_response_fifo_rv$EN_port0__write =
	     WILL_FIRE_RL_fib_gather_results ||
	     WILL_FIRE_RL_fib_gather_results_1 ||
	     WILL_FIRE_RL_fib_gather_results_2 ||
	     WILL_FIRE_RL_fib_gather_results_3 ||
	     WILL_FIRE_RL_fib_gather_results_4 ||
	     WILL_FIRE_RL_fib_gather_results_5 ||
	     WILL_FIRE_RL_fib_gather_results_6 ||
	     WILL_FIRE_RL_fib_gather_results_7 ||
	     WILL_FIRE_RL_fib_gather_results_8 ||
	     WILL_FIRE_RL_fib_gather_results_9 ;
  always@(WILL_FIRE_RL_fib_gather_results or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_1 or
	  WILL_FIRE_RL_fib_gather_results_1 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_2 or
	  WILL_FIRE_RL_fib_gather_results_2 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_fib_gather_results_3 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_fib_gather_results_4 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_5 or
	  WILL_FIRE_RL_fib_gather_results_5 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_6 or
	  WILL_FIRE_RL_fib_gather_results_6 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_7 or
	  WILL_FIRE_RL_fib_gather_results_7 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_8 or
	  WILL_FIRE_RL_fib_gather_results_8 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_9 or
	  WILL_FIRE_RL_fib_gather_results_9 or
	  MUX_fib_response_fifo_rv$port0__write_1__VAL_10)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fib_gather_results:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_1;
      WILL_FIRE_RL_fib_gather_results_1:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_2;
      WILL_FIRE_RL_fib_gather_results_2:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_fib_gather_results_3:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_fib_gather_results_4:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_5;
      WILL_FIRE_RL_fib_gather_results_5:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_6;
      WILL_FIRE_RL_fib_gather_results_6:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_7;
      WILL_FIRE_RL_fib_gather_results_7:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_8;
      WILL_FIRE_RL_fib_gather_results_8:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_9;
      WILL_FIRE_RL_fib_gather_results_9:
	  fib_response_fifo_rv$port0__write_1 =
	      MUX_fib_response_fifo_rv$port0__write_1__VAL_10;
      default: fib_response_fifo_rv$port0__write_1 =
		   33'h0AAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fib_response_fifo_rv$port1__read =
	     fib_response_fifo_rv$EN_port0__write ?
	       fib_response_fifo_rv$port0__write_1 :
	       fib_response_fifo_rv ;
  assign fib_response_fifo_rv$port2__read =
	     WILL_FIRE_RL_display_results ?
	       33'h0AAAAAAAA :
	       fib_response_fifo_rv$port1__read ;

  // register fib_read_server
  always@(WILL_FIRE_RL_fib_gather_results_9 or
	  WILL_FIRE_RL_fib_gather_results or
	  WILL_FIRE_RL_fib_gather_results_1 or
	  WILL_FIRE_RL_fib_gather_results_2 or
	  WILL_FIRE_RL_fib_gather_results_3 or
	  WILL_FIRE_RL_fib_gather_results_4 or
	  WILL_FIRE_RL_fib_gather_results_5 or
	  WILL_FIRE_RL_fib_gather_results_6 or
	  WILL_FIRE_RL_fib_gather_results_7 or
	  WILL_FIRE_RL_fib_gather_results_8)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fib_gather_results_9: fib_read_server$D_IN = 6'd0;
      WILL_FIRE_RL_fib_gather_results: fib_read_server$D_IN = 6'd1;
      WILL_FIRE_RL_fib_gather_results_1: fib_read_server$D_IN = 6'd2;
      WILL_FIRE_RL_fib_gather_results_2: fib_read_server$D_IN = 6'd3;
      WILL_FIRE_RL_fib_gather_results_3: fib_read_server$D_IN = 6'd4;
      WILL_FIRE_RL_fib_gather_results_4: fib_read_server$D_IN = 6'd5;
      WILL_FIRE_RL_fib_gather_results_5: fib_read_server$D_IN = 6'd6;
      WILL_FIRE_RL_fib_gather_results_6: fib_read_server$D_IN = 6'd7;
      WILL_FIRE_RL_fib_gather_results_7: fib_read_server$D_IN = 6'd8;
      WILL_FIRE_RL_fib_gather_results_8: fib_read_server$D_IN = 6'd9;
      default: fib_read_server$D_IN = 6'b101010 /* unspecified value */ ;
    endcase
  end
  assign fib_read_server$EN =
	     WILL_FIRE_RL_fib_gather_results_9 ||
	     WILL_FIRE_RL_fib_gather_results ||
	     WILL_FIRE_RL_fib_gather_results_1 ||
	     WILL_FIRE_RL_fib_gather_results_2 ||
	     WILL_FIRE_RL_fib_gather_results_3 ||
	     WILL_FIRE_RL_fib_gather_results_4 ||
	     WILL_FIRE_RL_fib_gather_results_5 ||
	     WILL_FIRE_RL_fib_gather_results_6 ||
	     WILL_FIRE_RL_fib_gather_results_7 ||
	     WILL_FIRE_RL_fib_gather_results_8 ;

  // register fib_request_fifo_rv
  assign fib_request_fifo_rv$D_IN = fib_request_fifo_rv$port2__read ;
  assign fib_request_fifo_rv$EN = 1'b1 ;

  // register fib_response_fifo_rv
  assign fib_response_fifo_rv$D_IN = fib_response_fifo_rv$port2__read ;
  assign fib_response_fifo_rv$EN = 1'b1 ;

  // register fib_servers_1_a
  assign fib_servers_1_a$D_IN =
	     WILL_FIRE_RL_fib_servers_1_loop ?
	       MUX_fib_servers_1_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_1_a$EN =
	     WILL_FIRE_RL_fib_servers_1_loop ||
	     WILL_FIRE_RL_fib_put_requests_1 ;

  // register fib_servers_1_active
  assign fib_servers_1_active$D_IN =
	     !MUX_fib_servers_1_active$write_1__SEL_1 ;
  assign fib_servers_1_active$EN =
	     WILL_FIRE_RL_fib_servers_1_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_1_the_end ||
	     WILL_FIRE_RL_fib_put_requests_1 ;

  // register fib_servers_1_b
  assign fib_servers_1_b$D_IN =
	     WILL_FIRE_RL_fib_servers_1_loop ? fib_servers_1_a : 32'd0 ;
  assign fib_servers_1_b$EN =
	     WILL_FIRE_RL_fib_servers_1_loop ||
	     WILL_FIRE_RL_fib_put_requests_1 ;

  // register fib_servers_1_j
  assign fib_servers_1_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_1 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_1_j$write_1__VAL_2 ;
  assign fib_servers_1_j$EN =
	     WILL_FIRE_RL_fib_put_requests_1 ||
	     WILL_FIRE_RL_fib_servers_1_loop ;

  // register fib_servers_2_a
  assign fib_servers_2_a$D_IN =
	     WILL_FIRE_RL_fib_servers_2_loop ?
	       MUX_fib_servers_2_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_2_a$EN =
	     WILL_FIRE_RL_fib_servers_2_loop ||
	     WILL_FIRE_RL_fib_put_requests_2 ;

  // register fib_servers_2_active
  assign fib_servers_2_active$D_IN =
	     !MUX_fib_servers_2_active$write_1__SEL_1 ;
  assign fib_servers_2_active$EN =
	     WILL_FIRE_RL_fib_servers_2_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_2_the_end ||
	     WILL_FIRE_RL_fib_put_requests_2 ;

  // register fib_servers_2_b
  assign fib_servers_2_b$D_IN =
	     WILL_FIRE_RL_fib_servers_2_loop ? fib_servers_2_a : 32'd0 ;
  assign fib_servers_2_b$EN =
	     WILL_FIRE_RL_fib_servers_2_loop ||
	     WILL_FIRE_RL_fib_put_requests_2 ;

  // register fib_servers_2_j
  assign fib_servers_2_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_2 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_2_j$write_1__VAL_2 ;
  assign fib_servers_2_j$EN =
	     WILL_FIRE_RL_fib_put_requests_2 ||
	     WILL_FIRE_RL_fib_servers_2_loop ;

  // register fib_servers_3_a
  assign fib_servers_3_a$D_IN =
	     WILL_FIRE_RL_fib_servers_3_loop ?
	       MUX_fib_servers_3_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_3_a$EN =
	     WILL_FIRE_RL_fib_servers_3_loop ||
	     WILL_FIRE_RL_fib_put_requests_3 ;

  // register fib_servers_3_active
  assign fib_servers_3_active$D_IN =
	     !MUX_fib_servers_3_active$write_1__SEL_1 ;
  assign fib_servers_3_active$EN =
	     WILL_FIRE_RL_fib_servers_3_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_3_the_end ||
	     WILL_FIRE_RL_fib_put_requests_3 ;

  // register fib_servers_3_b
  assign fib_servers_3_b$D_IN =
	     WILL_FIRE_RL_fib_servers_3_loop ? fib_servers_3_a : 32'd0 ;
  assign fib_servers_3_b$EN =
	     WILL_FIRE_RL_fib_servers_3_loop ||
	     WILL_FIRE_RL_fib_put_requests_3 ;

  // register fib_servers_3_j
  assign fib_servers_3_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_3 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_3_j$write_1__VAL_2 ;
  assign fib_servers_3_j$EN =
	     WILL_FIRE_RL_fib_put_requests_3 ||
	     WILL_FIRE_RL_fib_servers_3_loop ;

  // register fib_servers_4_a
  assign fib_servers_4_a$D_IN =
	     WILL_FIRE_RL_fib_servers_4_loop ?
	       MUX_fib_servers_4_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_4_a$EN =
	     WILL_FIRE_RL_fib_servers_4_loop ||
	     WILL_FIRE_RL_fib_put_requests_4 ;

  // register fib_servers_4_active
  assign fib_servers_4_active$D_IN =
	     !MUX_fib_servers_4_active$write_1__SEL_1 ;
  assign fib_servers_4_active$EN =
	     WILL_FIRE_RL_fib_servers_4_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_4_the_end ||
	     WILL_FIRE_RL_fib_put_requests_4 ;

  // register fib_servers_4_b
  assign fib_servers_4_b$D_IN =
	     WILL_FIRE_RL_fib_servers_4_loop ? fib_servers_4_a : 32'd0 ;
  assign fib_servers_4_b$EN =
	     WILL_FIRE_RL_fib_servers_4_loop ||
	     WILL_FIRE_RL_fib_put_requests_4 ;

  // register fib_servers_4_j
  assign fib_servers_4_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_4 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_4_j$write_1__VAL_2 ;
  assign fib_servers_4_j$EN =
	     WILL_FIRE_RL_fib_put_requests_4 ||
	     WILL_FIRE_RL_fib_servers_4_loop ;

  // register fib_servers_5_a
  assign fib_servers_5_a$D_IN =
	     WILL_FIRE_RL_fib_servers_5_loop ?
	       MUX_fib_servers_5_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_5_a$EN =
	     WILL_FIRE_RL_fib_servers_5_loop ||
	     WILL_FIRE_RL_fib_put_requests_5 ;

  // register fib_servers_5_active
  assign fib_servers_5_active$D_IN =
	     !MUX_fib_servers_5_active$write_1__SEL_1 ;
  assign fib_servers_5_active$EN =
	     WILL_FIRE_RL_fib_servers_5_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_5_the_end ||
	     WILL_FIRE_RL_fib_put_requests_5 ;

  // register fib_servers_5_b
  assign fib_servers_5_b$D_IN =
	     WILL_FIRE_RL_fib_servers_5_loop ? fib_servers_5_a : 32'd0 ;
  assign fib_servers_5_b$EN =
	     WILL_FIRE_RL_fib_servers_5_loop ||
	     WILL_FIRE_RL_fib_put_requests_5 ;

  // register fib_servers_5_j
  assign fib_servers_5_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_5 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_5_j$write_1__VAL_2 ;
  assign fib_servers_5_j$EN =
	     WILL_FIRE_RL_fib_put_requests_5 ||
	     WILL_FIRE_RL_fib_servers_5_loop ;

  // register fib_servers_6_a
  assign fib_servers_6_a$D_IN =
	     WILL_FIRE_RL_fib_servers_6_loop ?
	       MUX_fib_servers_6_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_6_a$EN =
	     WILL_FIRE_RL_fib_servers_6_loop ||
	     WILL_FIRE_RL_fib_put_requests_6 ;

  // register fib_servers_6_active
  assign fib_servers_6_active$D_IN =
	     !MUX_fib_servers_6_active$write_1__SEL_1 ;
  assign fib_servers_6_active$EN =
	     WILL_FIRE_RL_fib_servers_6_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_6_the_end ||
	     WILL_FIRE_RL_fib_put_requests_6 ;

  // register fib_servers_6_b
  assign fib_servers_6_b$D_IN =
	     WILL_FIRE_RL_fib_servers_6_loop ? fib_servers_6_a : 32'd0 ;
  assign fib_servers_6_b$EN =
	     WILL_FIRE_RL_fib_servers_6_loop ||
	     WILL_FIRE_RL_fib_put_requests_6 ;

  // register fib_servers_6_j
  assign fib_servers_6_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_6 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_6_j$write_1__VAL_2 ;
  assign fib_servers_6_j$EN =
	     WILL_FIRE_RL_fib_put_requests_6 ||
	     WILL_FIRE_RL_fib_servers_6_loop ;

  // register fib_servers_7_a
  assign fib_servers_7_a$D_IN =
	     WILL_FIRE_RL_fib_servers_7_loop ?
	       MUX_fib_servers_7_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_7_a$EN =
	     WILL_FIRE_RL_fib_servers_7_loop ||
	     WILL_FIRE_RL_fib_put_requests_7 ;

  // register fib_servers_7_active
  assign fib_servers_7_active$D_IN =
	     !MUX_fib_servers_7_active$write_1__SEL_1 ;
  assign fib_servers_7_active$EN =
	     WILL_FIRE_RL_fib_servers_7_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_7_the_end ||
	     WILL_FIRE_RL_fib_put_requests_7 ;

  // register fib_servers_7_b
  assign fib_servers_7_b$D_IN =
	     WILL_FIRE_RL_fib_servers_7_loop ? fib_servers_7_a : 32'd0 ;
  assign fib_servers_7_b$EN =
	     WILL_FIRE_RL_fib_servers_7_loop ||
	     WILL_FIRE_RL_fib_put_requests_7 ;

  // register fib_servers_7_j
  assign fib_servers_7_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_7 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_7_j$write_1__VAL_2 ;
  assign fib_servers_7_j$EN =
	     WILL_FIRE_RL_fib_put_requests_7 ||
	     WILL_FIRE_RL_fib_servers_7_loop ;

  // register fib_servers_8_a
  assign fib_servers_8_a$D_IN =
	     WILL_FIRE_RL_fib_servers_8_loop ?
	       MUX_fib_servers_8_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_8_a$EN =
	     WILL_FIRE_RL_fib_servers_8_loop ||
	     WILL_FIRE_RL_fib_put_requests_8 ;

  // register fib_servers_8_active
  assign fib_servers_8_active$D_IN =
	     !MUX_fib_servers_8_active$write_1__SEL_1 ;
  assign fib_servers_8_active$EN =
	     WILL_FIRE_RL_fib_servers_8_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_8_the_end ||
	     WILL_FIRE_RL_fib_put_requests_8 ;

  // register fib_servers_8_b
  assign fib_servers_8_b$D_IN =
	     WILL_FIRE_RL_fib_servers_8_loop ? fib_servers_8_a : 32'd0 ;
  assign fib_servers_8_b$EN =
	     WILL_FIRE_RL_fib_servers_8_loop ||
	     WILL_FIRE_RL_fib_put_requests_8 ;

  // register fib_servers_8_j
  assign fib_servers_8_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_8 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_8_j$write_1__VAL_2 ;
  assign fib_servers_8_j$EN =
	     WILL_FIRE_RL_fib_put_requests_8 ||
	     WILL_FIRE_RL_fib_servers_8_loop ;

  // register fib_servers_9_a
  assign fib_servers_9_a$D_IN =
	     WILL_FIRE_RL_fib_servers_9_loop ?
	       MUX_fib_servers_9_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_9_a$EN =
	     WILL_FIRE_RL_fib_servers_9_loop ||
	     WILL_FIRE_RL_fib_put_requests_9 ;

  // register fib_servers_9_active
  assign fib_servers_9_active$D_IN =
	     !MUX_fib_servers_9_active$write_1__SEL_1 ;
  assign fib_servers_9_active$EN =
	     WILL_FIRE_RL_fib_servers_9_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_9_the_end ||
	     WILL_FIRE_RL_fib_put_requests_9 ;

  // register fib_servers_9_b
  assign fib_servers_9_b$D_IN =
	     WILL_FIRE_RL_fib_servers_9_loop ? fib_servers_9_a : 32'd0 ;
  assign fib_servers_9_b$EN =
	     WILL_FIRE_RL_fib_servers_9_loop ||
	     WILL_FIRE_RL_fib_put_requests_9 ;

  // register fib_servers_9_j
  assign fib_servers_9_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests_9 ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_9_j$write_1__VAL_2 ;
  assign fib_servers_9_j$EN =
	     WILL_FIRE_RL_fib_put_requests_9 ||
	     WILL_FIRE_RL_fib_servers_9_loop ;

  // register fib_servers_a
  assign fib_servers_a$D_IN =
	     WILL_FIRE_RL_fib_servers_loop ?
	       MUX_fib_servers_a$write_1__VAL_1 :
	       32'd1 ;
  assign fib_servers_a$EN =
	     WILL_FIRE_RL_fib_servers_loop || WILL_FIRE_RL_fib_put_requests ;

  // register fib_servers_active
  assign fib_servers_active$D_IN = !MUX_fib_servers_active$write_1__SEL_1 ;
  assign fib_servers_active$EN =
	     WILL_FIRE_RL_fib_servers_n_is_zero ||
	     WILL_FIRE_RL_fib_servers_the_end ||
	     WILL_FIRE_RL_fib_put_requests ;

  // register fib_servers_b
  assign fib_servers_b$D_IN =
	     WILL_FIRE_RL_fib_servers_loop ? fib_servers_a : 32'd0 ;
  assign fib_servers_b$EN =
	     WILL_FIRE_RL_fib_servers_loop || WILL_FIRE_RL_fib_put_requests ;

  // register fib_servers_j
  assign fib_servers_j$D_IN =
	     WILL_FIRE_RL_fib_put_requests ?
	       MUX_fib_servers_1_j$write_1__VAL_1 :
	       MUX_fib_servers_j$write_1__VAL_2 ;
  assign fib_servers_j$EN =
	     WILL_FIRE_RL_fib_put_requests || WILL_FIRE_RL_fib_servers_loop ;

  // register fib_write_server
  always@(WILL_FIRE_RL_fib_put_requests_9 or
	  WILL_FIRE_RL_fib_put_requests or
	  WILL_FIRE_RL_fib_put_requests_1 or
	  WILL_FIRE_RL_fib_put_requests_2 or
	  WILL_FIRE_RL_fib_put_requests_3 or
	  WILL_FIRE_RL_fib_put_requests_4 or
	  WILL_FIRE_RL_fib_put_requests_5 or
	  WILL_FIRE_RL_fib_put_requests_6 or
	  WILL_FIRE_RL_fib_put_requests_7 or WILL_FIRE_RL_fib_put_requests_8)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fib_put_requests_9: fib_write_server$D_IN = 6'd0;
      WILL_FIRE_RL_fib_put_requests: fib_write_server$D_IN = 6'd1;
      WILL_FIRE_RL_fib_put_requests_1: fib_write_server$D_IN = 6'd2;
      WILL_FIRE_RL_fib_put_requests_2: fib_write_server$D_IN = 6'd3;
      WILL_FIRE_RL_fib_put_requests_3: fib_write_server$D_IN = 6'd4;
      WILL_FIRE_RL_fib_put_requests_4: fib_write_server$D_IN = 6'd5;
      WILL_FIRE_RL_fib_put_requests_5: fib_write_server$D_IN = 6'd6;
      WILL_FIRE_RL_fib_put_requests_6: fib_write_server$D_IN = 6'd7;
      WILL_FIRE_RL_fib_put_requests_7: fib_write_server$D_IN = 6'd8;
      WILL_FIRE_RL_fib_put_requests_8: fib_write_server$D_IN = 6'd9;
      default: fib_write_server$D_IN = 6'b101010 /* unspecified value */ ;
    endcase
  end
  assign fib_write_server$EN =
	     WILL_FIRE_RL_fib_put_requests_9 ||
	     WILL_FIRE_RL_fib_put_requests ||
	     WILL_FIRE_RL_fib_put_requests_1 ||
	     WILL_FIRE_RL_fib_put_requests_2 ||
	     WILL_FIRE_RL_fib_put_requests_3 ||
	     WILL_FIRE_RL_fib_put_requests_4 ||
	     WILL_FIRE_RL_fib_put_requests_5 ||
	     WILL_FIRE_RL_fib_put_requests_6 ||
	     WILL_FIRE_RL_fib_put_requests_7 ||
	     WILL_FIRE_RL_fib_put_requests_8 ;

  // register n
  assign n$D_IN = n + 8'd1 ;
  assign n$EN = !fib_request_fifo_rv[8] && inputs$FULL_N && n <= 8'd20 ;

  // submodule fib_servers_1_result_fifo
  assign fib_servers_1_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_1_the_end ? fib_servers_1_a : 32'd0 ;
  assign fib_servers_1_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_1_the_end ||
	     WILL_FIRE_RL_fib_servers_1_n_is_zero ;
  assign fib_servers_1_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_1 ;
  assign fib_servers_1_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_2_result_fifo
  assign fib_servers_2_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_2_the_end ? fib_servers_2_a : 32'd0 ;
  assign fib_servers_2_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_2_the_end ||
	     WILL_FIRE_RL_fib_servers_2_n_is_zero ;
  assign fib_servers_2_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_2 ;
  assign fib_servers_2_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_3_result_fifo
  assign fib_servers_3_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_3_the_end ? fib_servers_3_a : 32'd0 ;
  assign fib_servers_3_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_3_the_end ||
	     WILL_FIRE_RL_fib_servers_3_n_is_zero ;
  assign fib_servers_3_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_3 ;
  assign fib_servers_3_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_4_result_fifo
  assign fib_servers_4_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_4_the_end ? fib_servers_4_a : 32'd0 ;
  assign fib_servers_4_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_4_the_end ||
	     WILL_FIRE_RL_fib_servers_4_n_is_zero ;
  assign fib_servers_4_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_4 ;
  assign fib_servers_4_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_5_result_fifo
  assign fib_servers_5_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_5_the_end ? fib_servers_5_a : 32'd0 ;
  assign fib_servers_5_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_5_the_end ||
	     WILL_FIRE_RL_fib_servers_5_n_is_zero ;
  assign fib_servers_5_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_5 ;
  assign fib_servers_5_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_6_result_fifo
  assign fib_servers_6_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_6_the_end ? fib_servers_6_a : 32'd0 ;
  assign fib_servers_6_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_6_the_end ||
	     WILL_FIRE_RL_fib_servers_6_n_is_zero ;
  assign fib_servers_6_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_6 ;
  assign fib_servers_6_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_7_result_fifo
  assign fib_servers_7_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_7_the_end ? fib_servers_7_a : 32'd0 ;
  assign fib_servers_7_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_7_the_end ||
	     WILL_FIRE_RL_fib_servers_7_n_is_zero ;
  assign fib_servers_7_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_7 ;
  assign fib_servers_7_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_8_result_fifo
  assign fib_servers_8_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_8_the_end ? fib_servers_8_a : 32'd0 ;
  assign fib_servers_8_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_8_the_end ||
	     WILL_FIRE_RL_fib_servers_8_n_is_zero ;
  assign fib_servers_8_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_8 ;
  assign fib_servers_8_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_9_result_fifo
  assign fib_servers_9_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_9_the_end ? fib_servers_9_a : 32'd0 ;
  assign fib_servers_9_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_9_the_end ||
	     WILL_FIRE_RL_fib_servers_9_n_is_zero ;
  assign fib_servers_9_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results_9 ;
  assign fib_servers_9_result_fifo$CLR = 1'b0 ;

  // submodule fib_servers_result_fifo
  assign fib_servers_result_fifo$D_IN =
	     WILL_FIRE_RL_fib_servers_the_end ? fib_servers_a : 32'd0 ;
  assign fib_servers_result_fifo$ENQ =
	     WILL_FIRE_RL_fib_servers_the_end ||
	     WILL_FIRE_RL_fib_servers_n_is_zero ;
  assign fib_servers_result_fifo$DEQ = WILL_FIRE_RL_fib_gather_results ;
  assign fib_servers_result_fifo$CLR = 1'b0 ;

  // submodule inputs
  assign inputs$D_IN = n ;
  assign inputs$ENQ = !fib_request_fifo_rv[8] && inputs$FULL_N && n <= 8'd20 ;
  assign inputs$DEQ = WILL_FIRE_RL_display_results ;
  assign inputs$CLR = 1'b0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fib_read_server <= `BSV_ASSIGNMENT_DELAY 6'd0;
	fib_request_fifo_rv <= `BSV_ASSIGNMENT_DELAY 9'd170;
	fib_response_fifo_rv <= `BSV_ASSIGNMENT_DELAY 33'h0AAAAAAAA;
	fib_servers_1_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_2_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_3_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_4_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_5_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_6_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_7_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_8_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_9_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_servers_active <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fib_write_server <= `BSV_ASSIGNMENT_DELAY 6'd0;
	n <= `BSV_ASSIGNMENT_DELAY 8'd0;
      end
    else
      begin
        if (fib_read_server$EN)
	  fib_read_server <= `BSV_ASSIGNMENT_DELAY fib_read_server$D_IN;
	if (fib_request_fifo_rv$EN)
	  fib_request_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	      fib_request_fifo_rv$D_IN;
	if (fib_response_fifo_rv$EN)
	  fib_response_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	      fib_response_fifo_rv$D_IN;
	if (fib_servers_1_active$EN)
	  fib_servers_1_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_1_active$D_IN;
	if (fib_servers_2_active$EN)
	  fib_servers_2_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_2_active$D_IN;
	if (fib_servers_3_active$EN)
	  fib_servers_3_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_3_active$D_IN;
	if (fib_servers_4_active$EN)
	  fib_servers_4_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_4_active$D_IN;
	if (fib_servers_5_active$EN)
	  fib_servers_5_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_5_active$D_IN;
	if (fib_servers_6_active$EN)
	  fib_servers_6_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_6_active$D_IN;
	if (fib_servers_7_active$EN)
	  fib_servers_7_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_7_active$D_IN;
	if (fib_servers_8_active$EN)
	  fib_servers_8_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_8_active$D_IN;
	if (fib_servers_9_active$EN)
	  fib_servers_9_active <= `BSV_ASSIGNMENT_DELAY
	      fib_servers_9_active$D_IN;
	if (fib_servers_active$EN)
	  fib_servers_active <= `BSV_ASSIGNMENT_DELAY fib_servers_active$D_IN;
	if (fib_write_server$EN)
	  fib_write_server <= `BSV_ASSIGNMENT_DELAY fib_write_server$D_IN;
	if (n$EN) n <= `BSV_ASSIGNMENT_DELAY n$D_IN;
      end
    if (fib_servers_1_a$EN)
      fib_servers_1_a <= `BSV_ASSIGNMENT_DELAY fib_servers_1_a$D_IN;
    if (fib_servers_1_b$EN)
      fib_servers_1_b <= `BSV_ASSIGNMENT_DELAY fib_servers_1_b$D_IN;
    if (fib_servers_1_j$EN)
      fib_servers_1_j <= `BSV_ASSIGNMENT_DELAY fib_servers_1_j$D_IN;
    if (fib_servers_2_a$EN)
      fib_servers_2_a <= `BSV_ASSIGNMENT_DELAY fib_servers_2_a$D_IN;
    if (fib_servers_2_b$EN)
      fib_servers_2_b <= `BSV_ASSIGNMENT_DELAY fib_servers_2_b$D_IN;
    if (fib_servers_2_j$EN)
      fib_servers_2_j <= `BSV_ASSIGNMENT_DELAY fib_servers_2_j$D_IN;
    if (fib_servers_3_a$EN)
      fib_servers_3_a <= `BSV_ASSIGNMENT_DELAY fib_servers_3_a$D_IN;
    if (fib_servers_3_b$EN)
      fib_servers_3_b <= `BSV_ASSIGNMENT_DELAY fib_servers_3_b$D_IN;
    if (fib_servers_3_j$EN)
      fib_servers_3_j <= `BSV_ASSIGNMENT_DELAY fib_servers_3_j$D_IN;
    if (fib_servers_4_a$EN)
      fib_servers_4_a <= `BSV_ASSIGNMENT_DELAY fib_servers_4_a$D_IN;
    if (fib_servers_4_b$EN)
      fib_servers_4_b <= `BSV_ASSIGNMENT_DELAY fib_servers_4_b$D_IN;
    if (fib_servers_4_j$EN)
      fib_servers_4_j <= `BSV_ASSIGNMENT_DELAY fib_servers_4_j$D_IN;
    if (fib_servers_5_a$EN)
      fib_servers_5_a <= `BSV_ASSIGNMENT_DELAY fib_servers_5_a$D_IN;
    if (fib_servers_5_b$EN)
      fib_servers_5_b <= `BSV_ASSIGNMENT_DELAY fib_servers_5_b$D_IN;
    if (fib_servers_5_j$EN)
      fib_servers_5_j <= `BSV_ASSIGNMENT_DELAY fib_servers_5_j$D_IN;
    if (fib_servers_6_a$EN)
      fib_servers_6_a <= `BSV_ASSIGNMENT_DELAY fib_servers_6_a$D_IN;
    if (fib_servers_6_b$EN)
      fib_servers_6_b <= `BSV_ASSIGNMENT_DELAY fib_servers_6_b$D_IN;
    if (fib_servers_6_j$EN)
      fib_servers_6_j <= `BSV_ASSIGNMENT_DELAY fib_servers_6_j$D_IN;
    if (fib_servers_7_a$EN)
      fib_servers_7_a <= `BSV_ASSIGNMENT_DELAY fib_servers_7_a$D_IN;
    if (fib_servers_7_b$EN)
      fib_servers_7_b <= `BSV_ASSIGNMENT_DELAY fib_servers_7_b$D_IN;
    if (fib_servers_7_j$EN)
      fib_servers_7_j <= `BSV_ASSIGNMENT_DELAY fib_servers_7_j$D_IN;
    if (fib_servers_8_a$EN)
      fib_servers_8_a <= `BSV_ASSIGNMENT_DELAY fib_servers_8_a$D_IN;
    if (fib_servers_8_b$EN)
      fib_servers_8_b <= `BSV_ASSIGNMENT_DELAY fib_servers_8_b$D_IN;
    if (fib_servers_8_j$EN)
      fib_servers_8_j <= `BSV_ASSIGNMENT_DELAY fib_servers_8_j$D_IN;
    if (fib_servers_9_a$EN)
      fib_servers_9_a <= `BSV_ASSIGNMENT_DELAY fib_servers_9_a$D_IN;
    if (fib_servers_9_b$EN)
      fib_servers_9_b <= `BSV_ASSIGNMENT_DELAY fib_servers_9_b$D_IN;
    if (fib_servers_9_j$EN)
      fib_servers_9_j <= `BSV_ASSIGNMENT_DELAY fib_servers_9_j$D_IN;
    if (fib_servers_a$EN)
      fib_servers_a <= `BSV_ASSIGNMENT_DELAY fib_servers_a$D_IN;
    if (fib_servers_b$EN)
      fib_servers_b <= `BSV_ASSIGNMENT_DELAY fib_servers_b$D_IN;
    if (fib_servers_j$EN)
      fib_servers_j <= `BSV_ASSIGNMENT_DELAY fib_servers_j$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fib_read_server = 6'h2A;
    fib_request_fifo_rv = 9'h0AA;
    fib_response_fifo_rv = 33'h0AAAAAAAA;
    fib_servers_1_a = 32'hAAAAAAAA;
    fib_servers_1_active = 1'h0;
    fib_servers_1_b = 32'hAAAAAAAA;
    fib_servers_1_j = 32'hAAAAAAAA;
    fib_servers_2_a = 32'hAAAAAAAA;
    fib_servers_2_active = 1'h0;
    fib_servers_2_b = 32'hAAAAAAAA;
    fib_servers_2_j = 32'hAAAAAAAA;
    fib_servers_3_a = 32'hAAAAAAAA;
    fib_servers_3_active = 1'h0;
    fib_servers_3_b = 32'hAAAAAAAA;
    fib_servers_3_j = 32'hAAAAAAAA;
    fib_servers_4_a = 32'hAAAAAAAA;
    fib_servers_4_active = 1'h0;
    fib_servers_4_b = 32'hAAAAAAAA;
    fib_servers_4_j = 32'hAAAAAAAA;
    fib_servers_5_a = 32'hAAAAAAAA;
    fib_servers_5_active = 1'h0;
    fib_servers_5_b = 32'hAAAAAAAA;
    fib_servers_5_j = 32'hAAAAAAAA;
    fib_servers_6_a = 32'hAAAAAAAA;
    fib_servers_6_active = 1'h0;
    fib_servers_6_b = 32'hAAAAAAAA;
    fib_servers_6_j = 32'hAAAAAAAA;
    fib_servers_7_a = 32'hAAAAAAAA;
    fib_servers_7_active = 1'h0;
    fib_servers_7_b = 32'hAAAAAAAA;
    fib_servers_7_j = 32'hAAAAAAAA;
    fib_servers_8_a = 32'hAAAAAAAA;
    fib_servers_8_active = 1'h0;
    fib_servers_8_b = 32'hAAAAAAAA;
    fib_servers_8_j = 32'hAAAAAAAA;
    fib_servers_9_a = 32'hAAAAAAAA;
    fib_servers_9_active = 1'h0;
    fib_servers_9_b = 32'hAAAAAAAA;
    fib_servers_9_j = 32'hAAAAAAAA;
    fib_servers_a = 32'hAAAAAAAA;
    fib_servers_active = 1'h0;
    fib_servers_b = 32'hAAAAAAAA;
    fib_servers_j = 32'hAAAAAAAA;
    fib_write_server = 6'h2A;
    n = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_display_results)
	$display("fib(%2d)=%6d",
		 $unsigned(inputs$D_OUT),
		 $unsigned(fib_response_fifo_rv$port1__read[31:0]));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_display_results && inputs$D_OUT == 8'd20)
	$finish(32'd1);
  end
  // synopsys translate_on
endmodule  // testbench

