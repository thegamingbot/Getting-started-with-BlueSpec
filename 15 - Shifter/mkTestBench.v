//
// Generated by Bluespec Compiler (build cd96b228)
//
// On Sun May 30 13:43:01 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTestBench(CLK,
		   RST_N);
  input  CLK;
  input  RST_N;

  // register inp
  reg [4 : 0] inp;
  wire [4 : 0] inp$D_IN;
  wire inp$EN;

  // ports of submodule shifter
  wire [19 : 0] shifter$request_put;
  wire [15 : 0] shifter$response_get;
  wire shifter$EN_request_put,
       shifter$EN_response_get,
       shifter$RDY_request_put,
       shifter$RDY_response_get;

  // submodule shifter
  mkShifter_16_4 shifter(.CLK(CLK),
			 .RST_N(RST_N),
			 .request_put(shifter$request_put),
			 .EN_request_put(shifter$EN_request_put),
			 .EN_response_get(shifter$EN_response_get),
			 .RDY_request_put(shifter$RDY_request_put),
			 .response_get(shifter$response_get),
			 .RDY_response_get(shifter$RDY_response_get));

  // register inp
  assign inp$D_IN = inp + 5'd1 ;
  assign inp$EN = shifter$RDY_request_put && inp < 5'd16 ;

  // submodule shifter
  assign shifter$request_put = { 16'h0001, inp[3:0] } ;
  assign shifter$EN_request_put = shifter$RDY_request_put && inp < 5'd16 ;
  assign shifter$EN_response_get = shifter$RDY_response_get ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        inp <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (inp$EN) inp <= `BSV_ASSIGNMENT_DELAY inp$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    inp = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (shifter$RDY_request_put && inp < 5'd16)
	$display("Input : 0000000000000001 << %2d", inp);
    if (RST_N != `BSV_RESET_VALUE)
      if (shifter$RDY_response_get)
	$display("Output: %16b", shifter$response_get);
    if (RST_N != `BSV_RESET_VALUE)
      if (shifter$RDY_response_get && shifter$response_get == 16'h8000)
	$finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mkTestBench

